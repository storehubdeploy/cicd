#!/usr/bin/env python3.6
# -*- coding: UTF-8 -*-
"""
  Author  : storehub
  Dtae    : 202001
"""

import os, sys, json
import requests
from optparse import OptionParser
sys.path.append("/data/ops/ci/libs")
from common import print_color
import re
from github import Github
from jira import JIRA

if __name__ == "__main__":
    appid = sys.argv[1]
    cluster = sys.argv[2]
    url = 'http://apollo-fat.shub.us'
    namespace = 'application'
    category = 'properties'
    jira = JIRA('https://storehub.atlassian.net', basic_auth=("matrix.wang@storehub.com", "Bv1bhVqMW7p2DuT45vhP2A99"))
    g = Github("26c01e24d48609683ce0d980615d9c5e22da72dd")
    repo = g.get_repo(sys.argv[4])
    pr_num = int(sys.argv[5].split('-')[1])
    pr = repo.get_pull(pr_num)
    issue = pr.head.ref
    #print(issue)
    if issue.startswith("release"):
        pass
    else:
        url1 = 'https://storehub.atlassian.net/rest/api/3/issue/{}'.format(issue)
        r = requests.get(url1, auth=('matrix.wang@storehub.com', 'Bv1bhVqMW7p2DuT45vhP2A99'))
        version = ''
        #print(r.json())
        if r.json()['fields']['fixVersions']:
            version = r.json()['fields']['fixVersions'][0]['name']
        else:
            version = None
        if category == 'properties':
            release_dict = {}
            r = requests.get("{0}/configfiles/json/{1}/{2}/{3}".format(url,appid,cluster,namespace))
            if r.status_code == 200:
                release_dict = {k:v for k,v in r.json().items()}
            else:
                print_color(31, "==> Can't connect to %s" % url)
                sys.exit(1)
            #print(release_dict)
            if sys.argv[3] == 'channel':
                print(release_dict.get(version))
            elif sys.argv[3] == 'qaapi_action':
                print(release_dict['qaapi_action'])
            elif sys.argv[3] == 'qaui_action':
                print(release_dict['qaui_action'])
            elif sys.argv[3] == 'channel_default':
                print(release_dict['channel_default'])
            elif sys.argv[3] == 'pgy_url':
                print(release_dict['pgy_url'])
            elif sys.argv[3] == 'report_url':
                print(release_dict['report_url'])
